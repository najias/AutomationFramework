<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="12" passed="11">
  <reporter-output>
  </reporter-output>
  <suite name="EliteCareer Automation Suite" duration-ms="39901" started-at="2017-04-04T02:31:09Z" finished-at="2017-04-04T02:31:49Z">
    <groups>
    </groups>
    <test name="Regression Test" duration-ms="39901" started-at="2017-04-04T02:31:09Z" finished-at="2017-04-04T02:31:49Z">
      <class name="tests.TestRegisterFeature">
        <test-method status="PASS" signature="setUp()[pri:0, instance:tests.TestRegisterFeature@72fa3f1b]" name="setUp" is-config="true" duration-ms="9548" started-at="2017-04-03T22:30:59Z" finished-at="2017-04-03T22:31:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="classSetUp()[pri:0, instance:tests.TestRegisterFeature@72fa3f1b]" name="classSetUp" is-config="true" duration-ms="4772" started-at="2017-04-03T22:31:09Z" finished-at="2017-04-03T22:31:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method status="PASS" signature="testFirstNameWithEmptyField()[pri:0, instance:tests.TestRegisterFeature@72fa3f1b]" name="testFirstNameWithEmptyField" duration-ms="4033" started-at="2017-04-03T22:31:14Z" finished-at="2017-04-03T22:31:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstNameWithEmptyField -->
        <test-method status="FAIL" signature="testFirstNameWithNumericData()[pri:0, instance:tests.TestRegisterFeature@72fa3f1b]" name="testFirstNameWithNumericData" duration-ms="2502" started-at="2017-04-03T22:31:18Z" finished-at="2017-04-03T22:31:21Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [FirstName must be String] but found [*]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [FirstName must be String] but found [*]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at tests.TestRegisterFeature.testFirstNameWithNumericData(TestRegisterFeature.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstNameWithNumericData -->
        <test-method status="PASS" signature="testFirstNameWithOneChar()[pri:0, instance:tests.TestRegisterFeature@72fa3f1b]" name="testFirstNameWithOneChar" duration-ms="2509" started-at="2017-04-03T22:31:23Z" finished-at="2017-04-03T22:31:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstNameWithOneChar -->
        <test-method status="PASS" signature="testFirstNameWithThirtyChar()[pri:0, instance:tests.TestRegisterFeature@72fa3f1b]" name="testFirstNameWithThirtyChar" duration-ms="1665" started-at="2017-04-03T22:31:25Z" finished-at="2017-04-03T22:31:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstNameWithThirtyChar -->
        <test-method status="PASS" signature="testFirstNameWithThirtyOneChar()[pri:0, instance:tests.TestRegisterFeature@72fa3f1b]" name="testFirstNameWithThirtyOneChar" duration-ms="1526" started-at="2017-04-03T22:31:27Z" finished-at="2017-04-03T22:31:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstNameWithThirtyOneChar -->
        <test-method status="PASS" signature="testFirstNameWithTwoChar()[pri:0, instance:tests.TestRegisterFeature@72fa3f1b]" name="testFirstNameWithTwoChar" duration-ms="1348" started-at="2017-04-03T22:31:28Z" finished-at="2017-04-03T22:31:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstNameWithTwoChar -->
        <test-method status="PASS" signature="classTearDown()[pri:0, instance:tests.TestRegisterFeature@72fa3f1b]" name="classTearDown" is-config="true" duration-ms="1422" started-at="2017-04-03T22:31:30Z" finished-at="2017-04-03T22:31:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classTearDown -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.TestRegisterFeature@72fa3f1b]" name="tearDown" is-config="true" duration-ms="154" started-at="2017-04-03T22:31:49Z" finished-at="2017-04-03T22:31:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.TestRegisterFeature -->
      <class name="tests.TestSigninFeature">
        <test-method status="PASS" signature="classSetUp()[pri:0, instance:tests.TestSigninFeature@b454096]" name="classSetUp" is-config="true" duration-ms="1430" started-at="2017-04-03T22:31:31Z" finished-at="2017-04-03T22:31:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method status="PASS" signature="testValidEmailAndValidPassword()[pri:0, instance:tests.TestSigninFeature@b454096]" name="testValidEmailAndValidPassword" duration-ms="5141" started-at="2017-04-03T22:31:33Z" finished-at="2017-04-03T22:31:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidEmailAndValidPassword -->
        <test-method status="PASS" signature="testWithEmptyEmailAndEmptyPassword()[pri:0, instance:tests.TestSigninFeature@b454096]" name="testWithEmptyEmailAndEmptyPassword" duration-ms="3022" started-at="2017-04-03T22:31:38Z" finished-at="2017-04-03T22:31:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithEmptyEmailAndEmptyPassword -->
        <test-method status="PASS" signature="testWithEmptyEmailAndValidPassword()[pri:0, instance:tests.TestSigninFeature@b454096]" name="testWithEmptyEmailAndValidPassword" duration-ms="1779" started-at="2017-04-03T22:31:41Z" finished-at="2017-04-03T22:31:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithEmptyEmailAndValidPassword -->
        <test-method status="PASS" signature="testWithInValidEmailAndInvalidPassword()[pri:0, instance:tests.TestSigninFeature@b454096]" name="testWithInValidEmailAndInvalidPassword" duration-ms="1528" started-at="2017-04-03T22:31:43Z" finished-at="2017-04-03T22:31:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithInValidEmailAndInvalidPassword -->
        <test-method status="PASS" signature="testWithValidEmailAndEmptyPassword()[pri:0, instance:tests.TestSigninFeature@b454096]" name="testWithValidEmailAndEmptyPassword" duration-ms="1603" started-at="2017-04-03T22:31:44Z" finished-at="2017-04-03T22:31:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithValidEmailAndEmptyPassword -->
        <test-method status="PASS" signature="testWithValidEmailAndInvalidPassword()[pri:0, instance:tests.TestSigninFeature@b454096]" name="testWithValidEmailAndInvalidPassword" duration-ms="1689" started-at="2017-04-03T22:31:46Z" finished-at="2017-04-03T22:31:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithValidEmailAndInvalidPassword -->
        <test-method status="PASS" signature="classTearDown()[pri:0, instance:tests.TestSigninFeature@b454096]" name="classTearDown" is-config="true" duration-ms="1285" started-at="2017-04-03T22:31:47Z" finished-at="2017-04-03T22:31:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classTearDown -->
      </class> <!-- tests.TestSigninFeature -->
    </test> <!-- Regression Test -->
  </suite> <!-- EliteCareer Automation Suite -->
</testng-results>
